.container
  .row-fluid{"class" => "show-grid"}
    %h1 Statistics
	
    %h2 Data Quality
    %table{:border => "0"}
      %tr
        %th/
        %th Total
        %th # Matched
        %th # Unmatched
        %th % Matched
        %tr
          %tr
            %th Addresses
            -addrStats = addresses_stats
            %td= addrStats[ :total]
            %td/
            %td/
            %td/
          %tr
            %th Cases
            -caseStats = cases_stats
            %td= caseStats[:total]
            %td= caseStats[:matched]
            %td= caseStats[:unmatched]
            %td= caseStats[:percentageMatched]
          %tr
            %th Inspections
            -inspStats = inspections_stats
            %td= inspStats[:total]
            %td= inspStats[:matched]
            %td= inspStats[:unmatched]
            %td= inspStats[:percentageMatched]
          %tr
            %th Notifications
            -notiStats = notifications_stats
            %td= notiStats[:total]
            %td= notiStats[:matched]
            %td= notiStats[:unmatched]
            %td= notiStats[:percentageMatched]
          %tr
            %th Hearings
            -hearStats = hearings_stats
            %td= hearStats[:total]
            %td= hearStats[:matched]
            %td= hearStats[:unmatched]
            %td= hearStats[:percentageMatched]
          %tr
            %th Resets
            -resetStats = resets_stats
            %td= resetStats[:total]
            %td= resetStats[:matched]
            %td= resetStats[:unmatched]
            %td= resetStats[:percentageMatched]
          %tr
            %th Judgments
            -judgeStats = judgements_stats
            %td= judgeStats[:total]
            %td= judgeStats[:matched]
            %td= judgeStats[:unmatched]
            %td= judgeStats[:percentageMatched]
          / %tr
          /   %th Maintenances
          /   -maintStats = maintenances_stats
          /   %td= maintStats[:total]
          /   %td= maintStats[:matched]
          /   %td= maintStats[:unmatched]
          /   %td= maintStats[:percentageMatched]
          %tr
            %th Foreclosures
            -foreclStats = foreclosures_stats
            %td= foreclStats[:total]
            %td= foreclStats[:matched]
            %td= foreclStats[:unmatched]
            %td= foreclStats[:percentageMatched]
          %tr
            %th Demolitions
            -demoStats = demolitions_stats
            %td= demoStats[:total]
            %td= demoStats[:matched]
            %td= demoStats[:unmatched]
            %td= demoStats[:percentageMatched]
			  
    %br
    %br
    %h2 City Stats
    %table{:border => "0"}
      %tr
        %tr
          %th Inspections
        %tr
          %td Results
          - inspStats[:results].each do |l,v|
            %td= l.class == String ? l.capitalize : "Undeclared"
        %tr
        %tr
          %th 
          - inspStats[:results].each do |l,v|
            %td= v.to_s
        %tr
      %tr
        %tr
          %th Notifications
        %tr
          %td Types
          - notiStats[:types].each do |l,v|
            %td= l.class == String ? l.capitalize : "Undeclared"
        %tr
        %tr
          %th 
          - notiStats[:types].each do |l,v|
            %td= v.to_s
        %tr
      %tr
        %tr
          %th Hearings
        %tr
          %td Status
          - hearStats[:status].each do |l,v|
            %td= l.class == String ? l.capitalize : "Undeclared"
        %tr
        %tr
          %th 
          - hearStats[:status].each do |l,v|
            %td= v.to_s
        %tr
      %tr
        %tr
          %th Judgments
        %tr
          %td Status
          - judgeStats[:status].each do |l,v|
            %td= l.class == String ? l.capitalize : "Undeclared"
        %tr
        %tr
          %th 
          - judgeStats[:status].each do |l,v|
            %td= v.to_s
        %tr
      / %tr
      /   %tr
      /     %th Maintenances
      /   %tr
      /     %td Status
      /     - maintStats[:status].each do |l,v|
      /       %td= l.class == String ? l.capitalize : "Undeclared"
      /   %tr
      /   %tr
      /     %th 
      /     - maintStats[:status].each do |l,v|
      /       %td= v.to_s
      /   %tr
      /     %td Program Name
      /     - maintStats[:program_names].each do |l,v|
      /       %td= l.class == String ? l.capitalize : "Undeclared"
      /   %tr
      /   %tr
      /     %th 
      /     - maintStats[:program_names].each do |l,v|
      /       %td= v.to_s
      /   %tr
      %tr
        %tr
          %th Foreclosures
        %tr
          %td Status
          - foreclStats[:status].each do |l,v|
            %td= l.class == String ? l.capitalize : "Undeclared"
        %tr
        %tr
          %th 
          - foreclStats[:status].each do |l,v|
            %td= v.to_s
        %tr
      %tr
